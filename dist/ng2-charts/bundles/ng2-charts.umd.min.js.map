{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../projects/ng2-charts/src/lib/default-colors.ts","../../../projects/ng2-charts/src/lib/get-colors.ts","../../../projects/ng2-charts/src/lib/theme.service.ts","../../../projects/ng2-charts/src/lib/base-chart.directive.ts","../../../projects/ng2-charts/src/lib/charts.module.ts","../../../projects/ng2-charts/src/lib/monkey-patch-chart-js-legend.ts","../../../projects/ng2-charts/src/lib/monkey-patch-chart-js-tooltip.ts"],"names":["Object","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","defaultColors","getColors","chartType","index","count","formatPieColors","generateColors","backgroundColor","colors","map","color","rgba","borderColor","hoverBackgroundColor","hoverBorderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","formatLineColor","generateColor","formatBarColor","Error","colour","alpha","concat","join","getRandomInt","min","max","Math","floor","random","getRandomColor","colorsArr","Array","ThemeService","this","pColorschemesOptions","colorschemesOptions","BehaviorSubject","prototype","setColorschemesOptions","options","getColorschemesOptions","Injectable","args","providedIn","UpdateType","Default","Update","Refresh","Chart","controllers","line","extend","name","initialize","apply","arguments","originalShowTooltip","showTooltip","activePoints","length","ctx","chart","scale","save","strokeStyle","beginPath","moveTo","x","startPoint","lineTo","endPoint","stroke","restore","BaseChartDirective","element","themeService","chartClick","EventEmitter","chartHover","old","dataExists","dataLength","datasetsExists","datasetsLength","datasetsDataObjects","datasetsDataLengths","colorsExists","labelsExist","labels","legendExists","legend","subs","registerPlugin","plugin","pluginService","register","unregisterPlugin","unregister","ngOnInit","_this","nativeElement","getContext","refresh","subscribe","themeChanged","ngDoCheck","updateRequired","wantUpdate","data","propagateDataToDatasets","datasets","filter","updateColors","colorsEqual","copyColor","labelsEqual","copyLabel","position","update","a","isArray","__spread","b","borderWidth","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderWidth","pointRadius","pointHoverRadius","pointHitRadius","pointHoverBorderWidth","pointStyle","hoverBorderWidth","forEach","elm","assign","ngOnChanges","changes","hasOwnProperty","currentValue","propagateDatasetsToData","config","display","generateLegend","ngOnDestroy","destroy","unsubscribe","duration","hideDataset","hidden","getDatasetMeta","isDatasetHidden","toBase64Image","getChartConfiguration","getDatasets","hover","onHover","event","active","emit","onClick","mergedOptions","smartMerge","type","plugins","getChartBuilder","chartConfig","overrides","level","cloneDeep","keys","key","arrayElements","isMultiLineLabel","label","joinLabel","newDataValues","isMultiDataSet","dataset","splice","Directive","selector","exportAs","ElementRef","Input","Output","NgModule","declarations","imports","exports","getAll","p","id","_element","fit","me","opts","labelOpts","labelFont","helpers","_parseFont","fontSize","size","hitboxes","legendHitBoxes","minSize","isHorizontal","width","maxWidth","height","maxHeight","getMaxLineWidth","textLines","textLine","measureText","reduce","acc","v","font","string","lineWidths","lineHeights","currentLineHeight","lineIndex","textAlign","textBaseline","each","legendItems","legendItem","text","padding","getBoxWidth","lineOrColumnIndex","left","top","vPadding","columnWidths","columnHeights","totalWidth","currentColWidth","currentColHeight","columnIndex","itemWidth","draw","globalDefaults","defaults","global","defaultColor","lineDefault","elements","legendHeight","legendWidth","cursor","fontColor","valueOrDefault","defaultFontColor","lineWidth","fillStyle","boxWidth","fillText","y","textWidth","halfFontSize","xLeft","yMiddle","lineOffset","w","h","drawCrossOver","drawStrikeThrough","alignmentOffset","dimension","blockSize","align","boxTopOffset","topOffset","trunc","isNaN","lineCap","lineDashOffset","lineJoin","setLineDash","lineDash","usePointStyle","radius","SQRT2","centerX","centerY","canvas","drawPoint","strokeRect","fillRect","drawLegendBox","console","log","Tooltip","drawBody","pt","vm","textColor","bodyFontSize","bodySpacing","bodyAlign","_bodyAlign","body","drawColorBoxes","displayColors","labelColors","xLinePadding","colorX","getAlignedX","fontString","_bodyFontStyle","_bodyFontFamily","fillLineOfText","bodyFontColor","beforeBody","bodyItem","labelTextColors","before","legendColorBackground","lines","after","afterBody","xPadding"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export const defaultColors: Array<number[]> = [\n  [255, 99, 132],\n  [54, 162, 235],\n  [255, 206, 86],\n  [75, 192, 192],\n  [151, 187, 205],\n  [247, 70, 74],\n  [70, 191, 189],\n  [253, 180, 92],\n  [148, 159, 177],\n  [77, 83, 96]\n];\n","import { Color } from './color';\nimport { Colors } from './colors';\nimport { defaultColors } from './default-colors';\n\n/**\n * Generate colors by chart type\n */\nexport function getColors(chartType: string, index: number, count: number): Color {\n  if (chartType === 'pie' || chartType === 'doughnut') {\n    return formatPieColors(generateColors(count));\n  }\n\n  if (chartType === 'polarArea') {\n    return formatPolarAreaColors(generateColors(count));\n  }\n\n  if (chartType === 'line' || chartType === 'radar' || chartType === 'lineWithLine') {\n    return formatLineColor(generateColor(index));\n  }\n\n  if (chartType === 'bar' || chartType === 'horizontalBar') {\n    return formatBarColor(generateColor(index));\n  }\n\n  if (chartType === 'bubble') {\n    return formatPieColors(generateColors(count));\n  }\n\n  if (chartType === 'scatter') {\n    return formatPieColors(generateColors(count));\n  }\n\n  throw new Error(`getColors - Unsupported chart type ${chartType}`);\n}\n\nfunction rgba(colour: Array<number>, alpha: number): string {\n  return 'rgba(' + colour.concat(alpha).join(',') + ')';\n}\n\nfunction getRandomInt(min: number, max: number): number {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction formatLineColor(colors: Array<number>): Color {\n  return {\n    backgroundColor: rgba(colors, 0.4),\n    borderColor: rgba(colors, 1),\n    pointBackgroundColor: rgba(colors, 1),\n    pointBorderColor: '#fff',\n    pointHoverBackgroundColor: '#fff',\n    pointHoverBorderColor: rgba(colors, 0.8)\n  };\n}\n\nfunction formatBarColor(colors: Array<number>): Color {\n  return {\n    backgroundColor: rgba(colors, 0.6),\n    borderColor: rgba(colors, 1),\n    hoverBackgroundColor: rgba(colors, 0.8),\n    hoverBorderColor: rgba(colors, 1)\n  };\n}\n\nfunction formatPieColors(colors: Array<number[]>): Colors {\n  return {\n    backgroundColor: colors.map((color: number[]) => rgba(color, 0.6)),\n    borderColor: colors.map(() => '#fff'),\n    pointBackgroundColor: colors.map((color: number[]) => rgba(color, 1)),\n    pointBorderColor: colors.map(() => '#fff'),\n    pointHoverBackgroundColor: colors.map((color: number[]) => rgba(color, 1)),\n    pointHoverBorderColor: colors.map((color: number[]) => rgba(color, 1))\n  };\n}\n\nfunction formatPolarAreaColors(colors: Array<number[]>): Color {\n  return {\n    backgroundColor: colors.map((color: number[]) => rgba(color, 0.6)),\n    borderColor: colors.map((color: number[]) => rgba(color, 1)),\n    hoverBackgroundColor: colors.map((color: number[]) => rgba(color, 0.8)),\n    hoverBorderColor: colors.map((color: number[]) => rgba(color, 1))\n  };\n}\n\nfunction getRandomColor(): number[] {\n  return [getRandomInt(0, 255), getRandomInt(0, 255), getRandomInt(0, 255)];\n}\n\n/**\n * Generate colors for line|bar charts\n */\nfunction generateColor(index: number): number[] {\n  return defaultColors[index] || getRandomColor();\n}\n\n/**\n * Generate colors for pie|doughnut charts\n */\nfunction generateColors(count: number): Array<number[]> {\n  const colorsArr: Array<number[]> = new Array(count);\n  for (let i = 0; i < count; i++) {\n    colorsArr[i] = defaultColors[i] || getRandomColor();\n  }\n  return colorsArr;\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ChartOptions } from 'chart.js';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  private pColorschemesOptions: ChartOptions = {};\n  public colorschemesOptions = new BehaviorSubject<ChartOptions>({});\n\n  constructor() { }\n\n  setColorschemesOptions(options: ChartOptions): void {\n    this.pColorschemesOptions = options;\n    this.colorschemesOptions.next(options);\n  }\n\n  getColorschemesOptions(): ChartOptions {\n    return this.pColorschemesOptions;\n  }\n}\n","import {\n  AfterViewInit,\n  Directive,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { getColors } from './get-colors';\nimport { Color } from './color';\nimport { ThemeService } from './theme.service';\nimport { Subscription } from 'rxjs';\nimport { cloneDeep } from 'lodash-es';\nimport {\n  Chart,\n  ChartConfiguration,\n  ChartDataSets,\n  ChartOptions,\n  ChartPoint, ChartType,\n  PluginServiceGlobalRegistration,\n  PluginServiceRegistrationOptions,\n  pluginService\n} from 'chart.js';\n\nexport type SingleDataSet = Array<number | null | undefined | number[]> | ChartPoint[];\nexport type MultiDataSet = SingleDataSet[];\nexport type SingleOrMultiDataSet = SingleDataSet | MultiDataSet;\n\nexport type PluginServiceGlobalRegistrationAndOptions =\n  PluginServiceGlobalRegistration\n  & PluginServiceRegistrationOptions;\nexport type SingleLineLabel = string;\nexport type MultiLineLabel = string[];\nexport type Label = SingleLineLabel | MultiLineLabel;\n\ninterface OldState {\n  dataExists: boolean;\n  dataLength: number;\n  datasetsExists: boolean;\n  datasetsLength: number;\n  datasetsDataObjects: any[];\n  datasetsDataLengths: number[];\n  colorsExists: boolean;\n  colors: Color[];\n  labelsExist: boolean;\n  labels: Label[];\n  legendExists: boolean;\n  legend: {\n    position?: string;\n  };\n}\n\nenum UpdateType {\n  Default,\n  Update,\n  Refresh\n}\n\n// Extend the line chart with a vertical indicator line chart thingy\nChart.controllers.line.extend({\n  name: \"lineWithLine\",\n  initialize: function() {\n    Chart.controllers.line.prototype.initialize.apply(this, arguments);\n\n    var originalShowTooltip = this.showTooltip;\n    this.showTooltip = function(activePoints) {\n\n      if (activePoints.length) {\n        var ctx = this.chart.ctx;\n        var scale = this.scale;\n        ctx.save();\n        ctx.strokeStyle = '#aaa';\n        ctx.beginPath();\n        ctx.moveTo(activePoints[0].x, scale.startPoint);\n        ctx.lineTo(activePoints[0].x, scale.endPoint);\n        ctx.stroke();\n        ctx.restore();\n      }\n\n      return originalShowTooltip.apply(this, arguments);\n    }\n  }\n});\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: 'canvas[baseChart]',\n  exportAs: 'base-chart'\n})\nexport class BaseChartDirective implements OnChanges, OnInit, OnDestroy, DoCheck {\n  @Input() public data: SingleOrMultiDataSet;\n  @Input() public datasets: ChartDataSets[];\n  @Input() public labels: Label[];\n  @Input() public options: ChartOptions = {};\n  @Input() public chartType: ChartType;\n  @Input() public colors: Color[];\n  @Input() public legend: boolean;\n  @Input() public plugins: PluginServiceGlobalRegistrationAndOptions[];\n\n  @Output() public chartClick: EventEmitter<{ event?: MouseEvent, active?: {}[] }> = new EventEmitter();\n  @Output() public chartHover: EventEmitter<{ event: MouseEvent, active: {}[] }> = new EventEmitter();\n\n  public ctx: string;\n  public chart: Chart;\n\n  private old: OldState = {\n    dataExists: false,\n    dataLength: 0,\n    datasetsExists: false,\n    datasetsLength: 0,\n    datasetsDataObjects: [],\n    datasetsDataLengths: [],\n    colorsExists: false,\n    colors: [],\n    labelsExist: false,\n    labels: [],\n    legendExists: false,\n    legend: {},\n  };\n\n  private subs: Subscription[] = [];\n\n  /**\n   * Register a plugin.\n   */\n  public static registerPlugin(plugin: PluginServiceGlobalRegistrationAndOptions): void {\n    pluginService.register(plugin);\n  }\n\n  public static unregisterPlugin(plugin: PluginServiceGlobalRegistrationAndOptions): void {\n    pluginService.unregister(plugin);\n  }\n\n  public constructor(\n    private element: ElementRef,\n    private themeService: ThemeService,\n  ) { }\n\n  public ngOnInit(): void {\n    this.ctx = this.element.nativeElement.getContext('2d');\n    this.refresh();\n    this.subs.push(this.themeService.colorschemesOptions.subscribe(r => this.themeChanged(r)));\n  }\n\n  private themeChanged(options: {}): void {\n    this.refresh();\n  }\n\n  ngDoCheck(): void {\n    if (!this.chart) {\n      return;\n    }\n    let updateRequired = UpdateType.Default;\n    const wantUpdate = (x: UpdateType) => {\n      updateRequired = x > updateRequired ? x : updateRequired;\n    };\n\n    if (!!this.data !== this.old.dataExists) {\n      this.propagateDataToDatasets(this.data);\n\n      this.old.dataExists = !!this.data;\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (this.data && this.data.length !== this.old.dataLength) {\n      this.old.dataLength = this.data && this.data.length || 0;\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (!!this.datasets !== this.old.datasetsExists) {\n      this.old.datasetsExists = !!this.datasets;\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (this.datasets && this.datasets.length !== this.old.datasetsLength) {\n      this.old.datasetsLength = this.datasets && this.datasets.length || 0;\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (this.datasets && this.datasets.filter((x, i) => x.data !== this.old.datasetsDataObjects[i]).length) {\n      this.old.datasetsDataObjects = this.datasets.map(x => x.data);\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (this.datasets && this.datasets.filter((x, i) => x.data.length !== this.old.datasetsDataLengths[i]).length) {\n      this.old.datasetsDataLengths = this.datasets.map(x => x.data.length);\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (!!this.colors !== this.old.colorsExists) {\n      this.old.colorsExists = !!this.colors;\n\n      this.updateColors();\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    // This smells of inefficiency, might need to revisit this\n    if (this.colors && this.colors.filter((x, i) => !this.colorsEqual(x, this.old.colors[i])).length) {\n      this.old.colors = this.colors.map(x => this.copyColor(x));\n\n      this.updateColors();\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (!!this.labels !== this.old.labelsExist) {\n      this.old.labelsExist = !!this.labels;\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (this.labels && this.labels.filter((x, i) => !this.labelsEqual(x, this.old.labels[i])).length) {\n      this.old.labels = this.labels.map(x => this.copyLabel(x));\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (!!this.options.legend !== this.old.legendExists) {\n      this.old.legendExists = !!this.options.legend;\n\n      wantUpdate(UpdateType.Refresh);\n    }\n\n    if (this.options.legend && this.options.legend.position !== this.old.legend.position) {\n      this.old.legend.position = this.options.legend.position;\n\n      wantUpdate(UpdateType.Refresh);\n    }\n\n    switch (updateRequired as UpdateType) {\n      case UpdateType.Default:\n        break;\n      case UpdateType.Update:\n        this.update();\n        break;\n      case UpdateType.Refresh:\n        this.refresh();\n        break;\n    }\n  }\n\n  copyLabel(a: Label): Label {\n    if (Array.isArray(a)) {\n      return [...a];\n    }\n    return a;\n  }\n\n  labelsEqual(a: Label, b: Label): boolean {\n    return Array.isArray(a) === Array.isArray(b)\n      && (Array.isArray(a) || a === b)\n      && (!Array.isArray(a) || a.length === b.length)\n      && (!Array.isArray(a) || a.filter((x, i) => x !== b[i]).length === 0)\n      ;\n  }\n\n  copyColor(a: Color): Color {\n    return {\n      backgroundColor: a.backgroundColor,\n      borderWidth: a.borderWidth,\n      borderColor: a.borderColor,\n      borderCapStyle: a.borderCapStyle,\n      borderDash: a.borderDash,\n      borderDashOffset: a.borderDashOffset,\n      borderJoinStyle: a.borderJoinStyle,\n      pointBorderColor: a.pointBorderColor,\n      pointBackgroundColor: a.pointBackgroundColor,\n      pointBorderWidth: a.pointBorderWidth,\n      pointRadius: a.pointRadius,\n      pointHoverRadius: a.pointHoverRadius,\n      pointHitRadius: a.pointHitRadius,\n      pointHoverBackgroundColor: a.pointHoverBackgroundColor,\n      pointHoverBorderColor: a.pointHoverBorderColor,\n      pointHoverBorderWidth: a.pointHoverBorderWidth,\n      pointStyle: a.pointStyle,\n      hoverBackgroundColor: a.hoverBackgroundColor,\n      hoverBorderColor: a.hoverBorderColor,\n      hoverBorderWidth: a.hoverBorderWidth,\n    };\n  }\n\n  colorsEqual(a: Color, b: Color): boolean {\n    if (!a !== !b) {\n      return false;\n    }\n    return !a ||\n      (a.backgroundColor === b.backgroundColor)\n      && (a.borderWidth === b.borderWidth)\n      && (a.borderColor === b.borderColor)\n      && (a.borderCapStyle === b.borderCapStyle)\n      && (a.borderDash === b.borderDash)\n      && (a.borderDashOffset === b.borderDashOffset)\n      && (a.borderJoinStyle === b.borderJoinStyle)\n      && (a.pointBorderColor === b.pointBorderColor)\n      && (a.pointBackgroundColor === b.pointBackgroundColor)\n      && (a.pointBorderWidth === b.pointBorderWidth)\n      && (a.pointRadius === b.pointRadius)\n      && (a.pointHoverRadius === b.pointHoverRadius)\n      && (a.pointHitRadius === b.pointHitRadius)\n      && (a.pointHoverBackgroundColor === b.pointHoverBackgroundColor)\n      && (a.pointHoverBorderColor === b.pointHoverBorderColor)\n      && (a.pointHoverBorderWidth === b.pointHoverBorderWidth)\n      && (a.pointStyle === b.pointStyle)\n      && (a.hoverBackgroundColor === b.hoverBackgroundColor)\n      && (a.hoverBorderColor === b.hoverBorderColor)\n      && (a.hoverBorderWidth === b.hoverBorderWidth);\n  }\n\n  updateColors(): void {\n    this.datasets.forEach((elm, index) => {\n      if (this.colors && this.colors[index]) {\n        Object.assign(elm, this.colors[index]);\n      } else {\n        Object.assign(elm, getColors(this.chartType, index, elm.data.length), { ...elm });\n      }\n    });\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    let updateRequired = UpdateType.Default;\n    const wantUpdate = (x: UpdateType) => {\n      updateRequired = x > updateRequired ? x : updateRequired;\n    };\n\n    // Check if the changes are in the data or datasets or labels or legend\n\n    if (changes.hasOwnProperty('data') && changes.data.currentValue) {\n      this.propagateDataToDatasets(changes.data.currentValue);\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (changes.hasOwnProperty('datasets') && changes.datasets.currentValue) {\n      this.propagateDatasetsToData(changes.datasets.currentValue);\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (changes.hasOwnProperty('labels')) {\n      if (this.chart) {\n        this.chart.data.labels = changes.labels.currentValue;\n      }\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (changes.hasOwnProperty('legend')) {\n      if (this.chart) {\n        this.chart.config.options.legend.display = changes.legend.currentValue;\n        this.chart.generateLegend();\n      }\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (changes.hasOwnProperty('options')) {\n      wantUpdate(UpdateType.Refresh);\n    }\n\n    switch (updateRequired as UpdateType) {\n      case UpdateType.Update:\n        this.update();\n        break;\n      case UpdateType.Refresh:\n      case UpdateType.Default:\n        this.refresh();\n        break;\n    }\n  }\n\n  public ngOnDestroy(): void {\n    if (this.chart) {\n      this.chart.destroy();\n      this.chart = void 0;\n    }\n    this.subs.forEach(x => x.unsubscribe());\n  }\n\n  public update(duration?: any): {} {\n    if (this.chart) {\n      return this.chart.update(duration);\n    }\n  }\n\n  public hideDataset(index: number, hidden: boolean): void {\n    this.chart.getDatasetMeta(index).hidden = hidden;\n    this.chart.update();\n  }\n\n  public isDatasetHidden(index: number): boolean {\n    return this.chart.getDatasetMeta(index).hidden;\n  }\n\n  public toBase64Image(): string {\n    return this.chart.toBase64Image();\n  }\n\n  public getChartConfiguration(): ChartConfiguration {\n    const datasets = this.getDatasets();\n\n    const options = Object.assign({}, this.options);\n    if (this.legend === false) {\n      options.legend = { display: false };\n    }\n    // hook for onHover and onClick events\n    options.hover = options.hover || {};\n    if (!options.hover.onHover) {\n      options.hover.onHover = (event: MouseEvent, active: {}[]) => {\n        if (active && !active.length) {\n          return;\n        }\n        this.chartHover.emit({ event, active });\n      };\n    }\n\n    if (!options.onClick) {\n      options.onClick = (event?: MouseEvent, active?: {}[]) => {\n        this.chartClick.emit({ event, active });\n      };\n    }\n\n    const mergedOptions = this.smartMerge(options, this.themeService.getColorschemesOptions());\n\n    return {\n      type: this.chartType,\n      data: {\n        labels: this.labels || [],\n        datasets\n      },\n      plugins: this.plugins,\n      options: mergedOptions,\n    };\n  }\n\n  public getChartBuilder(ctx: string/*, data:any[], options:any*/): Chart {\n    const chartConfig = this.getChartConfiguration();\n    return new Chart(ctx, chartConfig);\n  }\n\n  smartMerge(options: any, overrides: any, level: number = 0): any {\n    if (level === 0) {\n      options = cloneDeep(options);\n    }\n    const keysToUpdate = Object.keys(overrides);\n    keysToUpdate.forEach(key => {\n      if (Array.isArray(overrides[key])) {\n        const arrayElements = options[key];\n        if (arrayElements) {\n          arrayElements.forEach(r => {\n            this.smartMerge(r, overrides[key][0], level + 1);\n          });\n        }\n      } else if (typeof (overrides[key]) === 'object') {\n        if (!(key in options)) {\n          options[key] = {};\n        }\n        this.smartMerge(options[key], overrides[key], level + 1);\n      } else {\n        options[key] = overrides[key];\n      }\n    });\n    if (level === 0) {\n      return options;\n    }\n  }\n\n  private isMultiLineLabel(label: Label): label is MultiLineLabel {\n    return Array.isArray(label);\n  }\n\n  private joinLabel(label: Label): string {\n    if (!label) {\n      return null;\n    }\n    if (this.isMultiLineLabel(label)) {\n      return label.join(' ');\n    } else {\n      return label;\n    }\n  }\n\n  private propagateDatasetsToData(datasets: ChartDataSets[]): void {\n    this.data = this.datasets.map(r => r.data);\n    if (this.chart) {\n      this.chart.data.datasets = datasets;\n    }\n    this.updateColors();\n  }\n\n  private propagateDataToDatasets(newDataValues: SingleOrMultiDataSet): void {\n    if (this.isMultiDataSet(newDataValues)) {\n      if (this.datasets && newDataValues.length === this.datasets.length) {\n        this.datasets.forEach((dataset, i: number) => {\n          dataset.data = newDataValues[i];\n        });\n      } else {\n        this.datasets = newDataValues.map((data: number[], index: number) => {\n          return { data, label: this.joinLabel(this.labels[index]) || `Label ${index}` };\n        });\n        if (this.chart) {\n          this.chart.data.datasets = this.datasets;\n        }\n      }\n    } else {\n      if (!this.datasets) {\n        this.datasets = [{ data: newDataValues }];\n        if (this.chart) {\n          this.chart.data.datasets = this.datasets;\n        }\n      } else {\n        if (!this.datasets[0]) {\n          this.datasets[0] = {};\n        }\n\n        this.datasets[0].data = newDataValues;\n        this.datasets.splice(1); // Remove all elements but the first\n      }\n    }\n    this.updateColors();\n  }\n\n  private isMultiDataSet(data: SingleOrMultiDataSet): data is MultiDataSet {\n    return Array.isArray(data[0]);\n  }\n\n  private getDatasets(): Chart.ChartDataSets[] {\n    if (!this.datasets && !this.data) {\n      throw new Error(`ng-charts configuration error, data or datasets field are required to render chart ${ this.chartType }`);\n    }\n\n    // If `datasets` is defined, use it over the `data` property.\n    if (this.datasets) {\n      this.propagateDatasetsToData(this.datasets);\n      return this.datasets;\n    }\n\n    if (this.data) {\n      this.propagateDataToDatasets(this.data);\n      return this.datasets;\n    }\n  }\n\n  private refresh(): void {\n    // if (this.options && this.options.responsive) {\n    //   setTimeout(() => this.refresh(), 50);\n    // }\n\n    // todo: remove this line, it is producing flickering\n    if (this.chart) {\n      this.chart.destroy();\n      this.chart = void 0;\n    }\n    if (this.ctx) {\n      this.chart = this.getChartBuilder(this.ctx/*, data, this.options*/);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BaseChartDirective } from './base-chart.directive';\n\n@NgModule({\n  declarations: [\n    BaseChartDirective,\n  ],\n  imports: [\n  ],\n  exports: [\n    BaseChartDirective,\n  ]\n})\nexport class ChartsModule { }\n","// tslint:disable:variable-name\n// tslint:disable:no-var-keyword\n// tslint:disable:prefer-const\n// tslint:disable:only-arrow-functions\n// tslint:disable:one-variable-per-declaration\n// tslint:disable:object-literal-shorthand\n// tslint:disable:space-before-function-paren\n\ndeclare class Chart {\n  static readonly Chart: typeof Chart;\n  static readonly Tooltip: any;\n  static readonly helpers: any;\n  static readonly defaults: any;\n  static readonly plugins: any;\n}\n\nexport function monkeyPatchChartJsLegend() {\n  if (typeof Chart === 'undefined') {\n    console.log('Chart not defined (guessing this is a universal build, and I don\\'t know why this happens -- Aviad)');\n    return;\n  }\n  const plugins = Chart.plugins.getAll();\n  const legend = plugins.filter(p => p.id === 'legend')[0];\n  legend._element.prototype.fit = fit;\n  legend._element.prototype.draw = draw;\n\n  const helpers = Chart.helpers;\n  const defaults = Chart.defaults;\n  const valueOrDefault = helpers.valueOrDefault;\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ?\n      fontSize :\n      labelOpts.boxWidth;\n  }\n\n  function fit() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var display = opts.display;\n\n    var ctx = me.ctx;\n\n    var labelFont = helpers.options._parseFont(labelOpts);\n    var fontSize = labelFont.size;\n\n    // Reset hit boxes\n    var hitboxes = me.legendHitBoxes = [];\n\n    var minSize = me.minSize;\n    var isHorizontal = me.isHorizontal();\n\n    if (isHorizontal) {\n      minSize.width = me.maxWidth; // fill all the width\n      minSize.height = display ? 10 : 0;\n    } else {\n      minSize.width = display ? 10 : 0;\n      minSize.height = me.maxHeight; // fill all the height\n    }\n\n    var getMaxLineWidth = function (textLines) {\n      return textLines.map(function (textLine) {\n        return ctx.measureText(textLine).width;\n      }).reduce(function (acc, v) {\n        return v > acc ? v : acc;\n      }, 0);\n    };\n\n    // Increase sizes here\n    if (display) {\n      ctx.font = labelFont.string;\n\n      if (isHorizontal) {\n\n        // Labels\n\n        // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n        var lineWidths = me.lineWidths = [0];\n        var lineHeights = me.lineHeights = [];\n        var currentLineHeight = 0;\n        var lineIndex = 0;\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'top';\n\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var width, height;\n\n          if (helpers.isArray(legendItem.text)) {\n            width = getMaxLineWidth(legendItem.text);\n            height = fontSize * legendItem.text.length + labelOpts.padding;\n          } else {\n            width = ctx.measureText(legendItem.text).width;\n            height = fontSize + labelOpts.padding;\n          }\n          width += getBoxWidth(labelOpts, fontSize) + (fontSize / 2);\n\n          if (lineWidths[lineWidths.length - 1] + width + 2 * labelOpts.padding > minSize.width) {\n            lineHeights.push(currentLineHeight);\n            currentLineHeight = 0;\n            lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n            lineIndex++;\n          }\n\n          legendItem.lineOrColumnIndex = lineIndex;\n\n          if (height > currentLineHeight) {\n            currentLineHeight = height;\n          }\n\n          // Store the hitbox width and height here. Final position will be updated in `draw`\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: width,\n            height: height,\n          };\n\n          lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n        });\n\n        lineHeights.push(currentLineHeight);\n        minSize.height += lineHeights.reduce(function (acc, v) {\n          return acc + v;\n        }, 0);\n\n      } else {\n        var vPadding = labelOpts.padding;\n        var columnWidths = me.columnWidths = [];\n        var columnHeights = me.columnHeights = [];\n        var totalWidth = labelOpts.padding;\n        var currentColWidth = 0;\n        var currentColHeight = 0;\n        var columnIndex = 0;\n\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var itemWidth;\n          var height;\n\n          if (helpers.isArray(legendItem.text)) {\n            itemWidth = getMaxLineWidth(legendItem.text);\n            height = fontSize * legendItem.text.length;\n          } else {\n            itemWidth = ctx.measureText(legendItem.text).width;\n            height = fontSize;\n          }\n          itemWidth += getBoxWidth(labelOpts, fontSize) + (fontSize / 2);\n\n          // If too tall, go to new column\n          if (currentColHeight + fontSize + 2 * vPadding > minSize.height) {\n            totalWidth += currentColWidth + labelOpts.padding;\n            columnWidths.push(currentColWidth); // previous column width\n            columnHeights.push(currentColHeight);\n            currentColWidth = 0;\n            currentColHeight = 0;\n            columnIndex++;\n          }\n\n          legendItem.lineOrColumnIndex = columnIndex;\n\n          // Get max width\n          currentColWidth = Math.max(currentColWidth, itemWidth);\n          currentColHeight += height + vPadding;\n\n          // Store the hitbox width and height here. Final position will be updated in `draw`\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: itemWidth,\n            height: height\n          };\n        });\n\n        totalWidth += currentColWidth;\n        columnWidths.push(currentColWidth);\n        columnHeights.push(currentColHeight);\n        minSize.width += totalWidth;\n      }\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  }\n\n  function draw() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var globalDefaults = defaults.global;\n    var defaultColor = globalDefaults.defaultColor;\n    var lineDefault = globalDefaults.elements.line;\n    var legendHeight = me.height;\n    var columnHeights = me.columnHeights;\n    var columnWidths = me.columnWidths;\n    var legendWidth = me.width;\n    var lineWidths = me.lineWidths;\n    var lineHeights = me.lineHeights;\n\n    if (opts.display) {\n      var ctx = me.ctx;\n      var fontColor = valueOrDefault(labelOpts.fontColor, globalDefaults.defaultFontColor);\n      var labelFont = helpers.options._parseFont(labelOpts);\n      var fontSize = labelFont.size;\n      var cursor;\n\n      // Canvas setup\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.strokeStyle = fontColor; // for strikethrough effect\n      ctx.fillStyle = fontColor; // render in correct colour\n      ctx.font = labelFont.string;\n\n      var boxWidth = getBoxWidth(labelOpts, fontSize);\n      var hitboxes = me.legendHitBoxes;\n\n      // current position\n      var drawLegendBox = function (x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0) {\n          return;\n        }\n\n        // Set the ctx for the box\n        ctx.save();\n\n        var lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n        if (ctx.setLineDash) {\n          // IE 9 and 10 do not support line dash\n          ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n        }\n\n        if (opts.labels && opts.labels.usePointStyle) {\n          // Recalculate x and y for drawPoint() because its expecting\n          // x and y to be center of figure (instead of top left)\n          var radius = boxWidth * Math.SQRT2 / 2;\n          var centerX = x + boxWidth / 2;\n          var centerY = y + fontSize / 2;\n\n          // Draw pointStyle as legend symbol\n          helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n        } else {\n          // Draw box as legend symbol\n          if (lineWidth !== 0) {\n            ctx.strokeRect(x, y, boxWidth, fontSize);\n          }\n          ctx.fillRect(x, y, boxWidth, fontSize);\n        }\n\n        ctx.restore();\n      };\n\n      var drawStrikeThrough = function (x, y, w) {\n        ctx.beginPath();\n        ctx.lineWidth = 2;\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + w, y);\n        ctx.stroke();\n      };\n\n      var drawCrossOver = function (x, y, w, h) {\n        ctx.beginPath();\n        ctx.lineWidth = 2;\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + w, y + h);\n        ctx.moveTo(x, y + h);\n        ctx.lineTo(x + w, y);\n        ctx.stroke();\n      };\n\n      var fillText = function (x, y, legendItem, textWidth) {\n        var halfFontSize = fontSize / 2;\n        var xLeft = boxWidth + halfFontSize + x;\n        var yMiddle = y + halfFontSize;\n\n        if (helpers.isArray(legendItem.text)) {\n          helpers.each(legendItem.text, function (textLine, index) {\n            var lineOffset = index * fontSize;\n            ctx.fillText(textLine, xLeft, yMiddle + lineOffset);\n          });\n        } else {\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n        }\n\n        if (legendItem.hidden) {\n          if (helpers.isArray(legendItem.text)) {\n            drawCrossOver(xLeft, yMiddle, textWidth, (legendItem.text.length - 1) * (fontSize - 1));\n          } else {\n            drawStrikeThrough(xLeft, yMiddle, textWidth);\n          }\n        }\n      };\n\n      var alignmentOffset = function (dimension, blockSize) {\n        switch (opts.align) {\n          case 'start':\n            return labelOpts.padding;\n          case 'end':\n            return dimension - blockSize;\n          default: // center\n            return (dimension - blockSize + labelOpts.padding) / 2;\n        }\n      };\n\n      // Horizontal\n      var isHorizontal = me.isHorizontal();\n      if (isHorizontal) {\n        cursor = {\n          x: me.left + alignmentOffset(legendWidth, lineWidths[0]),\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: me.left + labelOpts.padding,\n          y: me.top + alignmentOffset(legendHeight, columnHeights[0]),\n          line: 0\n        };\n      }\n\n      helpers.each(me.legendItems, function (legendItem, i) {\n        var textWidth, height, boxTopOffset;\n\n        if (legendItem.lineOrColumnIndex > cursor.line) {\n          if (isHorizontal) {\n            cursor.y += lineHeights[cursor.line];\n            cursor.line = legendItem.lineOrColumnIndex;\n            cursor.x = me.left + alignmentOffset(legendWidth, lineWidths[cursor.line]);\n          } else {\n            cursor.x += columnWidths[cursor.line] + labelOpts.padding;\n            cursor.line = legendItem.lineOrColumnIndex;\n            cursor.y = me.top + alignmentOffset(legendHeight, columnHeights[cursor.line]);\n          }\n        }\n\n        if (helpers.isArray(legendItem.text)) {\n          textWidth = legendItem.text.map(function (textLine) {\n            return ctx.measureText(textLine).width;\n          }).reduce(function (acc, v) {\n            return v > acc ? v : acc;\n          }, 0);\n          boxTopOffset = fontSize / 2 * (legendItem.text.length - 1);\n          height = fontSize * legendItem.text.length;\n        } else {\n          textWidth = ctx.measureText(legendItem.text).width;\n          boxTopOffset = 0;\n          height = fontSize;\n        }\n\n        var width = boxWidth + (fontSize / 2) + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n\n        var topOffset = isHorizontal ? Math.trunc((lineHeights[cursor.line] - hitboxes[i].height) / 2) : 0;\n\n        drawLegendBox(x, y + boxTopOffset + topOffset, legendItem);\n\n        hitboxes[i].left = x;\n        hitboxes[i].top = y;\n\n        // Fill the actual label\n        fillText(x, y + topOffset, legendItem, textWidth);\n\n        if (isHorizontal) {\n          cursor.x += width + labelOpts.padding;\n        } else {\n          cursor.y += height + labelOpts.padding;\n        }\n      });\n    }\n  }\n}\n","// tslint:disable:variable-name\n// tslint:disable:no-var-keyword\n// tslint:disable:prefer-const\n// tslint:disable:only-arrow-functions\n// tslint:disable:one-variable-per-declaration\n// tslint:disable:object-literal-shorthand\n// tslint:disable:space-before-function-paren\n\ndeclare class Chart {\n  static readonly Chart: typeof Chart;\n  static readonly Tooltip: any;\n  static readonly helpers: any;\n  static readonly defaults: any;\n  static readonly plugins: any;\n}\n\nexport function monkeyPatchChartJsTooltip() {\n  if (typeof Chart === 'undefined') {\n    console.log('Chart not defined (guessing this is a universal build, and I don\\'t know why this happens -- Aviad)');\n    return;\n  }\n  Chart.Tooltip.prototype.drawBody = drawBody;\n  const helpers = Chart.helpers;\n\n  function getAlignedX(vm, align) {\n    return align === 'center'\n      ? vm.x + vm.width / 2\n      : align === 'right'\n        ? vm.x + vm.width - vm.xPadding\n        : vm.x + vm.xPadding;\n  }\n\n  function drawBody(pt, vm, ctx) {\n    var bodyFontSize = vm.bodyFontSize;\n    var bodySpacing = vm.bodySpacing;\n    var bodyAlign = vm._bodyAlign;\n    var body = vm.body;\n    var drawColorBoxes = vm.displayColors;\n    var labelColors = vm.labelColors;\n    var xLinePadding = 0;\n    var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n    var textColor;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'top';\n    ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n    pt.x = getAlignedX(vm, bodyAlign);\n\n    // Before Body\n    var fillLineOfText = function (line) {\n      ctx.fillText(line, pt.x + xLinePadding, pt.y);\n      pt.y += bodyFontSize + bodySpacing;\n    };\n\n    // Before body lines\n    ctx.fillStyle = vm.bodyFontColor;\n    helpers.each(vm.beforeBody, fillLineOfText);\n\n    xLinePadding = drawColorBoxes && bodyAlign !== 'right'\n      ? bodyAlign === 'center' ? (bodyFontSize / 2 + 1) : (bodyFontSize + 2)\n      : 0;\n\n    // Draw body lines now\n    helpers.each(body, function (bodyItem, i) {\n      textColor = vm.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      helpers.each(bodyItem.before, fillLineOfText);\n\n      // Draw Legend-like boxes if needed\n      if (drawColorBoxes) {\n        // Fill a white rect so that colours merge nicely if the opacity is < 1\n        ctx.fillStyle = vm.legendColorBackground;\n        ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n\n        // Border\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = labelColors[i].borderColor;\n        ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n\n        // Inner square\n        ctx.fillStyle = labelColors[i].backgroundColor;\n        ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n        ctx.fillStyle = textColor;\n      }\n\n      helpers.each(bodyItem.lines, fillLineOfText);\n\n      helpers.each(bodyItem.after, fillLineOfText);\n    });\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n\n    // After body lines\n    helpers.each(vm.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n}\n"]}